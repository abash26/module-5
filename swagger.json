{
  "swagger": "2.0",
  "info": {
    "description": "This is node.js CRUD app",
    "version": "1.0.0",
    "title": "Nodejs app",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3001",
  "basePath": "/",
  "tags": [
    {
      "name": "group",
      "description": "API for groups in the system"
    },
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "userGroup",
      "description": "Operations about userGroup"
    }
  ],
  "schemes": ["http"],
  "paths": {
    "/users/login": {
      "post": {
        "tags": ["user"],
        "summary": "User login",
        "description": "",
        "operationId": "login",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User that wants to login",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "400": {
            "description": "Error: Bad Request"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": ["user"],
        "summary": "Get user",
        "description": "",
        "operationId": "getUserWithId",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "400": {
            "description": "Error: Bad Request"
          },
          "401": {
            "description": "Error: Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": ["user"],
        "summary": "Delete user",
        "description": "",
        "operationId": "deleteUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "Error: Bad Request"
          },
          "401": {
            "description": "Error: Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "patch": {
        "tags": ["user"],
        "summary": "Update user",
        "description": "",
        "operationId": "updateUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be updated",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditUser"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "Error: Bad Request"
          },
          "401": {
            "description": "Error: Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": ["user"],
        "summary": "Get users",
        "description": "",
        "operationId": "getUsers",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "The numbers of items to return"
          },
          {
            "name": "login",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Filter users by login"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Error: Bad Request"
          },
          "401": {
            "description": "Error: Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": ["user"],
        "summary": "Create user",
        "description": "",
        "operationId": "createUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditUser"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Error: Bad Request"
          },
          "401": {
            "description": "Error: Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/groups": {
      "get": {
        "tags": ["group"],
        "summary": "Get groups",
        "description": "",
        "operationId": "getGroups",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Group"
              }
            }
          },
          "400": {
            "description": "Error: Bad Request"
          },
          "401": {
            "description": "Error: Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": ["group"],
        "summary": "Create group",
        "description": "",
        "operationId": "createGroup",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Group object that needs to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Error: Bad Request"
          },
          "401": {
            "description": "Error: Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/groups/{groupId}": {
      "get": {
        "tags": ["group"],
        "summary": "Get group by ID",
        "description": "",
        "operationId": "getGroupWithId",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "ID of the group",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Error: Bad Request"
          },
          "401": {
            "description": "Error: Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": ["group"],
        "summary": "Delete group",
        "description": "",
        "operationId": "deleteGroup",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "ID of the group",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Error: Bad Request"
          },
          "401": {
            "description": "Error: Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "patch": {
        "tags": ["group"],
        "summary": "Update group",
        "description": "",
        "operationId": "updateGroup",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Group object that needs to be updated",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditGroup"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "ID of the group",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "Error: Bad Request"
          },
          "401": {
            "description": "Error: Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/usergroup": {
      "get": {
        "tags": ["userGroup"],
        "summary": "Get all userGroups",
        "description": "",
        "operationId": "getUserGroupsWithId",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserGroup"
              }
            }
          },
          "400": {
            "description": "Error: Bad Request"
          },
          "401": {
            "description": "Error: Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/addtogroup": {
      "post": {
        "tags": ["userGroup"],
        "summary": "Add user to the group",
        "description": "",
        "operationId": "addUserToGroup",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be updated",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AddToGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Error: Bad Request"
          },
          "401": {
            "description": "Error: Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "login": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "age": {
          "type": "integer"
        },
        "isdeleted": {
          "type": "boolean"
        },
        "token": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "Group"
      }
    },
    "EditGroup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "Group"
      }
    },
    "UserLogin": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "EditUser": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "age": {
          "type": "integer"
        },
        "isdeleted": {
          "type": "boolean"
        }
      }
    },
    "UserGroup": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "groupId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "UserGroup"
      }
    },
    "AddToGroup": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "group": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "AddToGroup"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
